     1                                  ;move.asm
     2                                  section .data
     3 00000000 7B                      	bNum	db		123
     4 00000001 3930                    	wNum	dw		12345
     5 00000003 D2029649                	dNum	dd		1234567890
     6 00000007 155FD0AC4B9BB601        	qNum1	dq		123456789123456789
     7 0000000F 40E2010000000000        	qNum2	dq		123456
     8 00000017 1F85EB51B81E0940        	qNum3	dq		3.14
     9                                  section .bss
    10                                  section .text
    11                                  	global main
    12                                  main:
    13 00000000 55                      	push	rbp
    14 00000001 4889E5                  	mov		rbp,rsp
    15 00000004 48C7C0FFFFFFFF          	mov 	rax, -1	;fill rax with 1
    16 0000000B 8A0425[00000000]        	mov		al, byte [bNum] ; does NOT clear upper bits of rax
    17 00000012 4831C0                  	xor		rax, rax
    18 00000015 8A0425[00000000]        	mov		al, byte [bNum] ; now rax has the correct value
    19                                  
    20 0000001C 48C7C0FFFFFFFF          	mov		rax, -1
    21 00000023 668B0425[01000000]      	mov		ax, word [wNum]	; does NOT clear upper bits of rax
    22 0000002B 4831C0                  	xor		rax, rax
    23                                  	mov		eax, word [wNum] ; does clear upper bits of rax
    23          ******************       error: mismatch in operand sizes
    24                                  
    25 0000002E 48C7C0FFFFFFFF          	mov		rax, -1
    26                                  	mov		ax, dword [dNum]; does clear upper bits of rax
    26          ******************       error: mismatch in operand sizes
    27                                  
    28 00000035 48C7C0FFFFFFFF          	mov		rax, -1
    29 0000003C 488B0425[07000000]      	mov		rax, qword [qNum1]; does clear upper bits of rax
    30 00000044 48890425[0F000000]      	mov		qword [qNum2], rax
    31 0000004C B840E20100              	mov		rax, 123456		;immediate value
    32 00000051 F30F7E0425-             	movq	xmm0, [qNum3]	;instruction for floating point
    32 00000056 [17000000]         
    33 0000005A 4889EC                  	mov 	rsp, rbp
    34 0000005D 5D                      	pop		rbp
    35 0000005E C3                      	ret
